import { useState } from "react";
import { useAppDispatch } from "../../app/hooks";
import { sortParamChanged } from "../../app/songsSlice";
import LabeledSelect from "../common/labeledSelect";

const Sort = ({ className }) => {
	const dispatch = useAppDispatch();

	const sortParams: SortParam[] = [
		{ property: "", label: "Default", order: "asc" },
		{ property: "title", label: "Ascending order A - Z", order: "asc" },
		{ property: "title", label: "Descending order Z - A", order: "des" },
		{ property: "time", label: "Date added Recent to Oldest", order: "des" },
		{ property: "time", label: "Date added Oldest to Recent", order: "asc" }
	];

	const options = sortParams.map(param => param.label);

	const [value, setValue] = useState(options[0]);

	const handleSort = (value: string) => {
		const param = sortParams.find(s => s.label === value);

		setValue(value);

		dispatch(sortParamChanged(param));
	};

	return (
		<LabeledSelect
			name="Sort"
			Icon={<SortIcon />}
			value={value}
			onSelect={handleSort}
			options={options}
			className={className}
		/>
	);
};

export default Sort;

// ===================== SORT ICON ======================

const SortIcon = () => (
	<svg
		width="14"
		height="11"
		viewBox="0 0 14 11"
		fill="none"
		xmlns="http://www.w3.org/2000/svg"
	>
		<path
			d="M5.71573 2.21027H12.8208C12.9657 2.21027 13.1047 2.15268 13.2072 2.05019C13.3097 1.94769 13.3673 1.80868 13.3673 1.66373C13.3673 1.51878 13.3097 1.37976 13.2072 1.27727C13.1047 1.17477 12.9657 1.11719 12.8208 1.11719H5.71573C5.57078 1.11719 5.43176 1.17477 5.32927 1.27727C5.22677 1.37976 5.16919 1.51878 5.16919 1.66373C5.16919 1.80868 5.22677 1.94769 5.32927 2.05019C5.43176 2.15268 5.57078 2.21027 5.71573 2.21027Z"
			fill="#1D1C1D"
		/>
		<path
			d="M12.8208 4.94238H5.71573C5.57078 4.94238 5.43176 4.99996 5.32927 5.10246C5.22677 5.20496 5.16919 5.34397 5.16919 5.48893C5.16919 5.63388 5.22677 5.77289 5.32927 5.87539C5.43176 5.97789 5.57078 6.03547 5.71573 6.03547H12.8208C12.9657 6.03547 13.1047 5.97789 13.2072 5.87539C13.3097 5.77289 13.3673 5.63388 13.3673 5.48893C13.3673 5.34397 13.3097 5.20496 13.2072 5.10246C13.1047 4.99996 12.9657 4.94238 12.8208 4.94238Z"
			fill="#1D1C1D"
		/>
		<path
			d="M12.8208 8.76855H5.71573C5.57078 8.76855 5.43176 8.82614 5.32927 8.92863C5.22677 9.03113 5.16919 9.17015 5.16919 9.3151C5.16919 9.46005 5.22677 9.59907 5.32927 9.70156C5.43176 9.80406 5.57078 9.86164 5.71573 9.86164H12.8208C12.9657 9.86164 13.1047 9.80406 13.2072 9.70156C13.3097 9.59907 13.3673 9.46005 13.3673 9.3151C13.3673 9.17015 13.3097 9.03113 13.2072 8.92863C13.1047 8.82614 12.9657 8.76855 12.8208 8.76855Z"
			fill="#1D1C1D"
		/>
		<path
			d="M3.57728 2.20978C3.63135 2.20977 3.68421 2.19371 3.72915 2.16365C3.7741 2.13359 3.80911 2.09087 3.82977 2.0409C3.85042 1.99092 3.85579 1.93595 3.84519 1.88293C3.83459 1.8299 3.80849 1.78122 3.77021 1.74303L2.43665 0.41002C2.33416 0.307559 2.19517 0.25 2.05025 0.25C1.90532 0.25 1.76633 0.307559 1.66384 0.41002L0.33083 1.74303C0.292547 1.78122 0.266453 1.8299 0.255851 1.88293C0.245249 1.93595 0.250616 1.99092 0.271271 2.0409C0.291927 2.09087 0.326943 2.13359 0.371888 2.16365C0.416834 2.19371 0.469687 2.20977 0.523759 2.20978H1.50425V8.76826H0.523759C0.46964 8.76816 0.416712 8.78414 0.371683 8.81416C0.326654 8.84418 0.291552 8.88689 0.270829 8.93689C0.250105 8.98688 0.244693 9.0419 0.255278 9.09498C0.265862 9.14805 0.291968 9.19679 0.330284 9.23501L1.66384 10.568C1.76633 10.6705 1.90532 10.728 2.05025 10.728C2.19517 10.728 2.33416 10.6705 2.43665 10.568L3.77021 9.23501C3.80849 9.19682 3.83459 9.14813 3.84519 9.09511C3.85579 9.04209 3.85042 8.98711 3.82977 8.93714C3.80911 8.88717 3.7741 8.84445 3.72915 8.81439C3.68421 8.78432 3.63135 8.76827 3.57728 8.76826H2.59733V2.20978H3.57728Z"
			fill="#1D1C1D"
		/>
	</svg>
);
